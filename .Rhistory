data$cluster = NA
# for (cluster_method in  hclust_list ){
for(imputer_i in unique(data$imputer)){
cluster_method =  hclust_list[[imputer_i]]
rf.cluster  <- cutree( cluster_method, optimal_cluster) #corto los arboles
data[ data$imputer== imputer_i , 'cluster'] = rf.cluster
}
data_all = cbind(index, data)
library(ggdendro)
ggdendrogram(cluster_method, rotate = FALSE, size = 2)
ggdendrogram(cluster_method, rotate = True, size = 2)
ggdendrogram(cluster_method, rotate = TRUE, size = 2)
install.packages("ape")
require("ape")
colors = c("red", "blue", "green", "black")
cut_clust_list = list()
cut_clust_list = list()
# for (cluster_method in  hclust_list ){
for(imputer_i in unique(data$imputer)){
cluster_method =  hclust_list[[imputer_i]]
rf.cluster  <- cutree( cluster_method, optimal_cluster) #corto los arboles
cut_clust_list[[imputer_i]] = rf.cluster
data[ data$imputer== imputer_i , 'cluster'] = rf.cluster
}
plot(as.phylo(cluster_method), tip.color = colors[clus4],
label.offset = 1, cex = 0.7)
clus4 = cutree(cluster_method, 4)
plot(as.phylo(cluster_method), tip.color = colors[clus4],
label.offset = 1, cex = 0.7)
dhc <- as.dendrogram(cluster_method)
dend2 <- color_labels(dhc, k =optimal_cluster)
library(dendextend)
dend2 <- color_labels(dhc, k =optimal_cluster)
dend2
ddata <- dendro_data(dhc, type = "rectangle")
p <- ggplot(segment(ddata)) +
geom_segment(aes(x = x, y = y, xend = xend, yend = yend)) +
coord_flip() +
scale_y_reverse(expand = c(0.2, 0))
p
plot(dend2)
plot(dend2)
plot(dend2)
rect.hclust(dend2, k = optimal_cluster)
plot(dend2)
rect.hclust(dend2, k = optimal_cluster)
plot(cluster_method, hang = -1, cex = 0.6)
ggdendrogram(cluster_method, rotate = TRUE, size = 2)
plot(cluster_method, hang = -1, cex = 0.6)
plot(cluster_method, hang = -1, cex = 0.6)
rect.hclust(cluster_method, k = optimal_cluster)
plot(cluster_method, hang = -1, cex = 0.6)
rect.hclust(cluster_method, k = optimal_cluster,
border = 1:3)
plot(cluster_method, hang = -1, cex = 0.6)
rect.hclust(cluster_method, k = optimal_cluster,
border = 2:3)
plot(cluster_method, hang = -1, cex = 0.6)
rect.hclust(cluster_method, k = optimal_cluster,
border = 2:5)
jpg('results/hclust.jpg')
plot(cluster_method, hang = -1, cex = 0.6)
rect.hclust(cluster_method, k = optimal_cluster,
border = 2:5)
dev.off()
jpeg('results/hclust.jpg')
plot(cluster_method, hang = -1, cex = 0.6)
rect.hclust(cluster_method, k = optimal_cluster,
border = 2:5)
dev.off()
plot(cluster_method, hang = -1, cex = 0.6,
x = '')
dhc <- as.dendrogram(cluster_method)
plot(dhc, hang = -1, cex = 0.6)
dhc <- as.dendrogram(cluster_method)
plot(dhc, hang = -1, cex = 0.6)
rect.hclust(dhc, k = optimal_cluster,
border = 2:5)
optimal_cluster
rect.hclust(dhc, k = optimal_cluster,
border = 2:5)
plot(dhc, hang = -1, cex = 0.6)
rect.hclust(dhc, k = 3,
border = 2:5)
rect.hclust(dhc, k = 2,
border = 2:5)
plot(dhc, hang = -1, cex = 0.6)
rect.hclust(dhc, k = 2,
border = 2:5)
plot(dhc, hang = -1, cex = 0.6)
rect.hclust(dhc, k = 2,
border = 2:5)
dhc <- as.dendrogram(cluster_method)
plot(dhc, hang = -1, cex = 0.6)
rect.dendrogram(dhc, k = optimal_cluster,
border = 2:5)
jpeg('results/hclust.jpg')
dhc <- as.dendrogram(cluster_method)
plot(dhc, hang = -1, cex = 0.6)
rect.dendrogram(dhc, k = optimal_cluster,
border = 2:5)
dev.off()
dhc %>% color_branches(k=optimal_cluster) %>% plot(horiz=TRUE) %>%
rect.dendrogram(k=optimal_cluster,horiz=TRUE)
dhc %>% color_branches(k=optimal_cluster) %>% plot(horiz=TRUE)
dhc %>% color_branches(k=optimal_cluster) %>% plot(horiz=TRUE) %>%
rect.dendrogram(k=optimal_cluster,horiz=TRUE)
dhc
class(dhc)
dhc %>% color_branches(k=optimal_cluster) %>% plot(horiz=TRUE)
dhc %>% rect.dendrogram(k=optimal_cluster,horiz=TRUE)
hclust_list
unique(data$imputer)
hclust_list[['MICE-LinearRegression']]
hca    = hclust_list[['MICE-LinearRegression']]
dendr    <- dendro_data(hca, type="rectangle") # convert for ggplot
dendr
clust <- cutree(hca,k=optimal_cluster)  # k clusters
clust
names(clust)
dendr    <- dendro_data(hca, type="rectangle") # convert for ggplot
clust.df <- data.frame(label=names(clust), cluster=factor(clust))
clust.df
dendr[["labels"]]   <- merge(dendr[["labels"]],clust.df, by="label")
dendr
rect <- aggregate(x~cluster,label(dendr),range)
rect <- data.frame(rect$cluster,rect$x)
ymax <- mean(hca$height[length(hca$height)-((k-2):(k-1))])
ymax <- mean(hca$height[length(hca$height)-((optimal_cluster-2):(optimal_cluster-1))])
ggplot() +
geom_segment(data=segment(dendr), aes(x=x, y=y, xend=xend, yend=yend)) +
geom_text(data=label(dendr), aes(x, y, label=label, hjust=0, color=cluster),
size=3) +
geom_rect(data=rect, aes(xmin=X1-.3, xmax=X2+.3, ymin=0, ymax=ymax),
color="red", fill=NA)+
geom_hline(yintercept=0.33, color="blue")+
coord_flip() + scale_y_reverse(expand=c(0.2, 0)) +
theme_dendro()
ggplot() +
geom_segment(data=segment(dendr), aes(x=x, y=y, xend=xend, yend=yend)) +
geom_text(data=label(dendr), aes(x, y, label=label, hjust=0, color=cluster),
size=3) +
geom_rect(data=rect, aes(xmin=X1-.3, xmax=X2+.3, ymin=0, ymax=ymax),
color="red", fill=NA)+
# geom_hline(yintercept=0.33, color="blue")+
coord_flip() + scale_y_reverse(expand=c(0.2, 0)) +
theme_dendro()
ggplot() +
geom_segment(data=segment(dendr), aes(x=x, y=y, xend=xend, yend=yend)) +
geom_text(data=label(dendr), aes(x, y, label=label, hjust=0, color=cluster),
size=3) +
geom_rect(data=rect, aes(xmin=X1-.3, xmax=X2+.3, ymin=0, ymax=ymax),
color="red", fill=NA)+
# geom_hline(yintercept=0.33, color="blue")+
coord_flip() + scale_y_reverse(expand=c(0.2, 0)) +
theme_dendro()+
theme(legend.position = 'none')
ggplot() +
geom_segment(data=segment(dendr), aes(x=x, y=y, xend=xend, yend=yend)) +
geom_text(data=label(dendr), aes(x, y, label=label, hjust=0, color=cluster),
size=2) +
geom_rect(data=rect, aes(xmin=X1-.3, xmax=X2+.3, ymin=0, ymax=ymax),
color="red", fill=NA)+
# geom_hline(yintercept=0.33, color="blue")+
coord_flip() + scale_y_reverse(expand=c(0.2, 0)) +
theme_dendro()+
theme(legend.position = 'none')
ggplot() +
geom_segment(data=segment(dendr), aes(x=x, y=y, xend=xend, yend=yend)) +
geom_text(data=label(dendr), aes(x, y, label=label, hjust=0, color=cluster),
size=1.5) +
geom_rect(data=rect, aes(xmin=X1-.3, xmax=X2+.3, ymin=0, ymax=ymax),
color="red", fill=NA)+
# geom_hline(yintercept=0.33, color="blue")+
coord_flip() + scale_y_reverse(expand=c(0.2, 0)) +
theme_dendro()+
theme(legend.position = 'none')
ggsave(plot = 'results/dendo_clust.jpg')
ggsave(filename  = 'results/dendo_clust.jpg')
ggsave(filename  = 'results/dendo_clust.jpg',
height = 200 )
ggplot() +
geom_segment(data=segment(dendr), aes(x=x, y=y, xend=xend, yend=yend)) +
geom_text(data=label(dendr), aes(x, y, label=label, hjust=0, color=cluster),
size=1.5) +
geom_rect(data=rect, aes(xmin=X1-.3, xmax=X2+.3, ymin=0, ymax=ymax),
color="red", fill=NA)+
# geom_hline(yintercept=0.33, color="blue")+
coord_flip() + scale_y_reverse(expand=c(0.2, 0)) +
theme_dendro()+
theme(legend.position = 'none')
ggsave(plot = last_plot(), filename  = 'results/dendo_clust.jpg',
height = 200 )
ggsave(plot = last_plot(), filename  = 'results/dendo_clust.jpg',
height = 50 )
ggsave(plot = last_plot(), filename  = 'results/dendo_clust.jpg',
height = 50,
limitsize = FALSE)
ggsave(plot = last_plot(), filename  = 'results/dendo_clust.jpg',
height = 20,
width = 10,
limitsize = FALSE)
ggsave(plot = last_plot(), filename  = 'results/dendo_clust.jpg',
height = 15,
width = 10,
limitsize = FALSE)
library(ggdendro)
library(dendextend)
hca    = hclust_list[['MICE-LinearRegression']]
clust <- cutree(hca,k=optimal_cluster)  # k clusters
dendr    <- dendro_data(hca, type="rectangle") # convert for ggplot
clust.df <- data.frame(label=names(clust), cluster=factor(clust))
dendr[["labels"]]   <- merge(dendr[["labels"]],clust.df, by="label")
rect <- aggregate(x~cluster,label(dendr),range)
rect <- data.frame(rect$cluster,rect$x)
ymax <- mean(hca$height[length(hca$height)-((optimal_cluster-2):(optimal_cluster-1))])
ggplot() +
geom_segment(data=segment(dendr), aes(x=x, y=y, xend=xend, yend=yend)) +
geom_text(data=label(dendr), aes(x, y, label=label, hjust=0, color=cluster),
size=1.5) +
geom_rect(data=rect, aes(xmin=X1-.3, xmax=X2+.3, ymin=0, ymax=ymax),
color="red", fill=NA)+
# geom_hline(yintercept=0.33, color="blue")+
coord_flip() + scale_y_reverse(expand=c(0.2, 0)) +
theme_dendro()+
theme(legend.position = 'none')
ggsave(plot = last_plot(), filename  = 'results/dendo_clust.jpg',
height = 15,
width = 10,
limitsize = FALSE)
unique(data$imputer)
# hca    = hclust_list[['MICE-LinearRegression']]
hca    = hclust_list[['MICE-RandomForest']]
clust <- cutree(hca,k=optimal_cluster)  # k clusters
dendr    <- dendro_data(hca, type="rectangle") # convert for ggplot
clust.df <- data.frame(label=names(clust), cluster=factor(clust))
dendr[["labels"]]   <- merge(dendr[["labels"]],clust.df, by="label")
rect <- aggregate(x~cluster,label(dendr),range)
rect <- data.frame(rect$cluster,rect$x)
ymax <- mean(hca$height[length(hca$height)-((optimal_cluster-2):(optimal_cluster-1))])
ggplot() +
geom_segment(data=segment(dendr), aes(x=x, y=y, xend=xend, yend=yend)) +
geom_text(data=label(dendr), aes(x, y, label=label, hjust=0, color=cluster),
size=1.5) +
geom_rect(data=rect, aes(xmin=X1-.3, xmax=X2+.3, ymin=0, ymax=ymax),
color="red", fill=NA)+
# geom_hline(yintercept=0.33, color="blue")+
coord_flip() + scale_y_reverse(expand=c(0.2, 0)) +
theme_dendro()+
theme(legend.position = 'none')
ggsave(plot = last_plot(), filename  = 'results/dendo_clust.jpg',
height = 15,
width = 10,
limitsize = FALSE)
dhc <- as.dendrogram(hca)
plot(dhc, hang = -1, cex = 0.6)
rect.dendrogram(dhc, k = optimal_cluster,
border = 2:5)
plot(dhc, hang = -1, cex = 0.6)
rect.dendrogram(dhc, k = optimal_cluster,
border = 2:5)
dhc <- as.dendrogram(hca)
dend2 <- color_labels(dhc, k =optimal_cluster)
plot(dend2)
colors = c("red", "blue", "green", "black")
clus4 = cutree(hca, 4)
clus4 = cutree(hca, 3)
plot(as.phylo(cluster_method), tip.color = colors[clus4],
label.offset = 1, cex = 0.7)
# hca    = hclust_list[['MICE-LinearRegression']]
# hca    = hclust_list[['MICE-RandomForest']]
hca    = hclust_list[['Complete']]
clust <- cutree(hca,k=optimal_cluster)  # k clusters
dendr    <- dendro_data(hca, type="rectangle") # convert for ggplot
clust.df <- data.frame(label=names(clust), cluster=factor(clust))
dendr[["labels"]]   <- merge(dendr[["labels"]],clust.df, by="label")
rect <- aggregate(x~cluster,label(dendr),range)
rect <- data.frame(rect$cluster,rect$x)
ymax <- mean(hca$height[length(hca$height)-((optimal_cluster-2):(optimal_cluster-1))])
ggplot() +
geom_segment(data=segment(dendr), aes(x=x, y=y, xend=xend, yend=yend)) +
geom_text(data=label(dendr), aes(x, y, label=label, hjust=0, color=cluster),
size=1.5) +
geom_rect(data=rect, aes(xmin=X1-.3, xmax=X2+.3, ymin=0, ymax=ymax),
color="red", fill=NA)+
# geom_hline(yintercept=0.33, color="blue")+
coord_flip() + scale_y_reverse(expand=c(0.2, 0)) +
theme_dendro()+
theme(legend.position = 'none')
unique(data$imputer)
# hca    = hclust_list[['MICE-LinearRegression']]
# hca    = hclust_list[['MICE-RandomForest']]
# hca    = hclust_list[['Complete']]
hca    = hclust_list[['HotDeck']]
clust <- cutree(hca,k=optimal_cluster)  # k clusters
dendr    <- dendro_data(hca, type="rectangle") # convert for ggplot
clust.df <- data.frame(label=names(clust), cluster=factor(clust))
dendr[["labels"]]   <- merge(dendr[["labels"]],clust.df, by="label")
rect <- aggregate(x~cluster,label(dendr),range)
rect <- data.frame(rect$cluster,rect$x)
ymax <- mean(hca$height[length(hca$height)-((optimal_cluster-2):(optimal_cluster-1))])
ggplot() +
geom_segment(data=segment(dendr), aes(x=x, y=y, xend=xend, yend=yend)) +
geom_text(data=label(dendr), aes(x, y, label=label, hjust=0, color=cluster),
size=1.5) +
geom_rect(data=rect, aes(xmin=X1-.3, xmax=X2+.3, ymin=0, ymax=ymax),
color="red", fill=NA)+
# geom_hline(yintercept=0.33, color="blue")+
coord_flip() + scale_y_reverse(expand=c(0.2, 0)) +
theme_dendro()+
theme(legend.position = 'none')
# hca    = hclust_list[['MICE-LinearRegression']]
hca    = hclust_list[['MICE-RandomForest']]
# hca    = hclust_list[['Complete']]
# hca    = hclust_list[['HotDeck']]
clust <- cutree(hca,k=optimal_cluster)  # k clusters
dendr    <- dendro_data(hca, type="rectangle") # convert for ggplot
clust.df <- data.frame(label=names(clust), cluster=factor(clust))
dendr[["labels"]]   <- merge(dendr[["labels"]],clust.df, by="label")
rect <- aggregate(x~cluster,label(dendr),range)
rect <- data.frame(rect$cluster,rect$x)
ymax <- mean(hca$height[length(hca$height)-((optimal_cluster-2):(optimal_cluster-1))])
ggplot() +
geom_segment(data=segment(dendr), aes(x=x, y=y, xend=xend, yend=yend)) +
geom_text(data=label(dendr), aes(x, y, label=label, hjust=0, color=cluster),
size=1.5) +
geom_rect(data=rect, aes(xmin=X1-.3, xmax=X2+.3, ymin=0, ymax=ymax),
color="red", fill=NA)+
# geom_hline(yintercept=0.33, color="blue")+
coord_flip() + scale_y_reverse(expand=c(0.2, 0)) +
theme_dendro()+
theme(legend.position = 'none')
cut_clust_list
clust_df
unique(dataset$Country.Name)
clust_df = data.frame(country = unique(dataset$Country.Name) )
data
data_all = cbind(index, data)
data_all
pivot_wider(data_all,
id_cols = "Country.Name",
names_from = "imputer",
values_from = "cluster")
country_cluster = pivot_wider(data_all,
id_cols = "Country.Name",
names_from = "imputer",
values_from = "cluster")
View(country_cluster)
table(data_all$Country.Name, data_all$cluster)
country_cluster_table = table(data_all$Country.Name, data_all$cluster)
country_cluster_table
data_all %>%
group_by(Country.Name) %>%
summarise(n())
data_all
data_all %>%
group_by(Country.Name, imputer) %>%
summarise(n())
data_all %>%
count(Country.Name, imputer)
data_all %>%
count(Country.Name, imputer)
data_all %>%
count("Country.Name", "imputer")
data_all
data_all %>%
count(Country.Name, imputer)
data_all %>%
# count(Country.Name, imputer)
group_by(Country.Name, imputer) %>%
summarise(number = n())
data_all %>%
# count(Country.Name, imputer)
dplyr::group_by(Country.Name, imputer) %>%
dplyr::summarise(number = n())
data_all %>%
dplyr::count(Country.Name, imputer)
data_all %>%
dplyr::count(Country.Name)
data_all %>%
dplyr::count(Country.Name)
country_cluster_table
country_cluster_table = as.data.frame(table(data_all$Country.Name, data_all$cluster))
country_cluster_table
country_cluster_table = table(data_all$Country.Name, data_all$cluster)
country_cluster_table
data.frame(country_cluster_table)
as.tibble(country_cluster_table)
tibble(country_cluster_table)
country_cluster_table
data_all %>%
# dplyr::count(Country.Name)
dplyr::group_by(Country.Name, imputer) %>%
dplyr::summarise(number = n())
data_all %>%
# dplyr::count(Country.Name)
dplyr::group_by(Country.Name) %>%
dplyr::summarise(number = n())
data_all %>%
# dplyr::count(Country.Name)
dplyr::group_by(Country.Name) %>%
dplyr::summarise(number = n(imputer))
data_all %>%
group_by(imputer) %>%
summarise_all(.funs = mean)
data_all %>%
group_by(cluster) %>%
summarise_all(.funs = mean)
country_cluster_table
data_all %>%
count(Country.Name, imputer)
data_all %>%
dplyr::count(Country.Name, imputer)
data_all %>%
dplyr::count(Country.Name, imputer) %>%
group_by(Country.Name) %>%
mutate(prop = prop.table(n))
data_all %>%
dplyr::count(Country.Name, imputer) %>%
group_by(Country.Name) %>%
mutate(prop = prop.table(n),
count = table(n))
data_all %>%
table(., .$Country.Name, .$cluster)
data_all %>%
table(., .$Country.Name, .$cluster)
data_all
data_all %>%
table(.$Country.Name, .$cluster)
data_all %$%
table(.$Country.Name, .$cluster)
library(magrittr)
install.packages("magrittr")
data_all %$%
table(.$Country.Name, .$cluster)
tible(data_all) %$%
table(.$Country.Name, .$cluster)
tible(data_all)  %>%
table(.$Country.Name, .$cluster)
tibble(data_all)  %>%
table(.$Country.Name, .$cluster)
tibble(data_all)
tibble(data_all)  %>%
table(Country.Name, cluster)
tibble(data_all)  %$%
table(Country.Name, cluster)
library(magrittr)
tibble(data_all)  %>%
with(table(Country.Name, cluster) )
country_cluster_table =tibble(data_all)  %>%
with(table(Country.Name, cluster) )
country_cluster_table
summary(country_cluster_table)
country_cluster_table = as.data.frame(tibble(data_all)  %>%
with(table(Country.Name, cluster) ) )
country_cluster_table
country_cluster_table = asdataftibble(data_all)  %>%
with(table(Country.Name, cluster) )
country_cluster_table = tibble(data_all)  %>%
with(table(Country.Name, cluster) )
country_cluster_table
country_cluster_table = as.data.frame.matrix(table(data_all$Country.Name, data_all$cluster) )
country_cluster_table
View(country_cluster_table)
names(country_cluster_table)
country_cluster_table
data_all %>%
dplyr::count(Country.Name, imputer)
data_all %>%
dplyr::count(Country.Name,cluster) %>%
group_by(Country.Name) %>%
mutate(prop = prop.table(n),
count =)
data_all %>%
dplyr::count(Country.Name,cluster) %>%
group_by(Country.Name) %>%
mutate(prop = prop.table(n),
count =n()  )
country_cluster
data_all %>%
dplyr::count(Country.Name,cluster) %>%
group_by(Country.Name) %>%
mutate(prop = prop.table(n) )
data_all %>%
dplyr::count(Country.Name,cluster) %>%
group_by(Country.Name) %>%
mutate(prop = prop.table(n) )
data_all %>%
dplyr::count(Country.Name,cluster) %>%
group_by(Country.Name) %>%
mutate(prop = prop.table(n),
sd = sd (n) )
data_all %>%
dplyr::count(Country.Name,cluster) %>%
group_by(Country.Name) %>%
mutate(prop = prop.table(n),
sd = sd (n) ) %>%
arrange(-sd)
data_all %>%
dplyr::count(Country.Name,cluster)
data_all %>%
dplyr::count(Country.Name,cluster) %>%
group_by(Country.Name) %>%
mutate(prop = prop.table(n),
sd = sd (n) )
country_cluster_df = data_all %>%
dplyr::count(Country.Name,cluster) %>%
group_by(Country.Name) %>%
mutate(prop = prop.table(n),
sd = sd (n) ) %>%
arrange(-sd)
sum(country_cluster_df$prop)
